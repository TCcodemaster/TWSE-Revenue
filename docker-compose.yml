version: '3'

services:
  web:
    build: .
    ports:
      - "8082:8082"

    # ⬇️【開發階段使用：Bind Mount】可直接存取本機 ./data 和 ./cache 資料夾
    volumes:
      - ./data:/app/data # ✅ 本機的 ./data 對應容器內的 /app/data
      - ./cache:/app/cache # ✅ 本機的 ./cache 對應容器內的 /app/cache

    # ⬇️【Render 部署時】請註解上面兩行 Bind Mount，改用命名卷（Persistent Disk）
    # volumes:
    #   - db_data:/app/data # ✅ Render 將 Persistent Disk 掛載在 /app/data
    #   - cache_data:/app/cache # ✅ 如果也要快取快照儲存，可加上這一個（可選）
    env_file:
      - .env
    environment:
      - FLASK_ENV=production
      - WORKERS=2
      - TIMEOUT=120
      - MAX_REQUESTS=1000
      - MAX_REQUESTS_JITTER=50
      - DATABASE_DIR=/app/data
      - OAUTHLIB_INSECURE_TRANSPORT=1
    restart: always

    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8082/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M

    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"

    command: >
      gunicorn --workers ${WORKERS:-2} --worker-class gevent --worker-connections 1000 --timeout ${TIMEOUT:-120} --max-requests ${MAX_REQUESTS:-1000} --max-requests-jitter ${MAX_REQUESTS_JITTER:-50} --bind 0.0.0.0:8082 --access-logfile - --error-logfile - app:app

# ⬇️【Render 部署用的 Volume 定義】開發時可先註解掉
# volumes:
#   db_data:
#     driver: local
#   cache_data:
#     driver: local
